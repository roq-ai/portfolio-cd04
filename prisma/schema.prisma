generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model experience {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_name String     @db.VarChar(255)
  role         String     @db.VarChar(255)
  description  String?    @db.VarChar(255)
  portfolio_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  portfolio    portfolio? @relation(fields: [portfolio_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model portfolio {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  experience  experience[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
  skill       skill[]
  testimonial testimonial[]
}

model project {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String     @db.VarChar(255)
  description  String?    @db.VarChar(255)
  image        String?    @db.VarChar(255)
  portfolio_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  portfolio    portfolio? @relation(fields: [portfolio_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model skill {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String     @db.VarChar(255)
  portfolio_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  portfolio    portfolio? @relation(fields: [portfolio_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model testimonial {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content      String     @db.VarChar(255)
  author       String     @db.VarChar(255)
  portfolio_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  portfolio    portfolio? @relation(fields: [portfolio_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  portfolio   portfolio[]
}
